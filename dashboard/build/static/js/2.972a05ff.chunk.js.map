{"version":3,"file":"static/js/2.972a05ff.chunk.js","mappings":"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","sources":["pages/super_admin/Reports.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Headline, Card } from '../../components/ui/AdminDashboardUI';\nimport Header from '../../components/Header';\nimport MascotBear from '../../components/ui/MascotBear';\nimport { FaUsers, FaChartLine, FaUserCheck, FaLayerGroup, FaEnvelope, FaBell, FaLock, FaUserShield, FaQrcode, FaInfoCircle } from 'react-icons/fa';\n\nconst ReportGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(340px, 1fr));\n  gap: 28px;\n  margin-top: 40px;\n  justify-items: center;\n`;\n\nconst ReportCard = styled(Card)`\n  min-width: 0;\n  width: 100%;\n  max-width: 420px;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  padding: 38px 28px 28px 28px;\n  box-shadow: 0 6px 32px rgba(44,62,80,0.13);\n  border-radius: 28px;\n  border: 1.5px solid ${({ theme }) => theme.colors.border};\n  background: ${({ theme }) => theme.mode === 'dark' ? '#23272F' : '#F9FAFB'};\n  margin-bottom: 0;\n  transition: box-shadow 0.18s, border 0.18s, transform 0.18s, background 0.18s;\n  &:hover, &:focus {\n    box-shadow: 0 12px 40px rgba(76,175,80,0.18);\n    border: 2.5px solid ${({ theme }) => theme.colors.accent};\n    background: ${({ theme }) => theme.mode === 'dark' ? '#23272F' : '#F4FFF4'};\n    transform: translateY(-3px) scale(1.012);\n    outline: none;\n  }\n`;\n\nconst ReportIcon = styled.div`\n  width: 64px;\n  height: 64px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  background: ${({ theme }) => theme.colors.accent};\n  margin: 0 auto 22px auto;\n  box-shadow: 0 2px 12px rgba(255,193,7,0.10);\n  svg { font-size: 36px; color: #fff; }\n`;\n\nconst ReportTitleRow = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  justify-content: center;\n  margin-bottom: 2px;\n`;\n\nconst ReportTitle = styled.h3`\n  font-size: 1.35em;\n  font-weight: 900;\n  color: ${({ theme }) => theme.colors.primary};\n  margin: 0 0 2px 0;\n  text-align: center;\n`;\n\nconst TooltipIcon = styled.span`\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.accent};\n  svg { font-size: 1.15em; }\n  &:focus {\n    outline: 2px solid ${({ theme }) => theme.colors.accent};\n  }\n`;\n\nconst Tooltip = styled.span`\n  visibility: hidden;\n  opacity: 0;\n  width: 220px;\n  background: ${({ theme }) => theme.colors.surface};\n  color: ${({ theme }) => theme.colors.textPrimary};\n  text-align: left;\n  border-radius: 8px;\n  padding: 10px 14px;\n  position: absolute;\n  z-index: 10;\n  left: 50%;\n  top: 120%;\n  transform: translateX(-50%);\n  box-shadow: 0 4px 16px rgba(44,62,80,0.13);\n  font-size: 0.98em;\n  transition: opacity 0.18s;\n  ${TooltipIcon}:hover &,\n  ${TooltipIcon}:focus & {\n    visibility: visible;\n    opacity: 1;\n  }\n`;\n\nconst ReportSubtitle = styled.p`\n  color: ${({ theme }) => theme.colors.textSecondary};\n  font-size: 1.02em;\n  margin: 0 0 18px 0;\n  text-align: center;\n`;\n\nconst CardSection = styled.div`\n  background: ${({ theme }) => theme.mode === 'dark' ? '#1A1D22' : '#F4F6F8'};\n  border-radius: 14px;\n  padding: 16px 12px 10px 12px;\n  margin-bottom: 18px;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n`;\n\nconst PresetRow = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-bottom: 10px;\n  justify-content: center;\n`;\n\nconst PresetButton = styled.button`\n  background: ${({ theme }) => theme.colors.accent};\n  color: #212121;\n  font-size: 0.98em;\n  font-weight: 600;\n  border: none;\n  border-radius: 8px;\n  padding: 5px 14px;\n  cursor: pointer;\n  transition: background 0.18s, color 0.18s;\n  &:hover, &:focus {\n  background: ${({ theme }) => theme.colors.primary};\n    color: #fff;\n    outline: none;\n  }\n`;\n\nconst ReportInputRow = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 8px;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n  label {\n    font-size: 1.05em;\n    font-weight: 600;\n    color: ${({ theme }) => theme.colors.textSecondary};\n    display: flex;\n    flex-direction: column;\n    gap: 6px;\n    align-items: center;\n  }\n  input[type=\"date\"], input[type=\"number\"] {\n    padding: 9px 16px;\n    border-radius: 8px;\n    border: 1.5px solid ${({ theme }) => theme.colors.border};\n    background: ${({ theme }) => theme.colors.background};\n    color: ${({ theme }) => theme.colors.textPrimary};\n    font-size: 1.08em;\n    width: 140px;\n    transition: border 0.18s;\n    &:focus {\n      border-color: ${({ theme }) => theme.colors.accent};\n      outline: none;\n    }\n  }\n`;\n\nconst ReportButtonRow = styled.div`\n  display: flex;\n  gap: 16px;\n  margin-top: 18px;\n  width: 100%;\n  justify-content: center;\n  @media (max-width: 700px) {\n    flex-direction: column;\n    gap: 10px;\n    align-items: stretch;\n  }\n`;\n\nconst ReportButton = styled.a<{ disabled?: boolean }>`\n  flex: 1 1 0;\n  text-align: center;\n  padding: 12px 0;\n  border-radius: 10px;\n  background: ${({ theme, disabled }) => disabled ? theme.colors.disabled : theme.colors.primary};\n  color: #fff;\n  font-weight: 700;\n  text-decoration: none;\n  font-size: 1.08em;\n  box-shadow: 0 2px 8px rgba(44,62,80,0.07);\n  transition: background 0.18s, box-shadow 0.18s, color 0.18s;\n  pointer-events: ${({ disabled }) => disabled ? 'none' : 'auto'};\n  opacity: ${({ disabled }) => disabled ? 0.6 : 1};\n  &:hover, &:focus {\n    background: ${({ theme, disabled }) => disabled ? theme.colors.disabled : theme.colors.primaryDark};\n    color: #fff;\n    outline: none;\n    box-shadow: 0 4px 16px rgba(76,175,80,0.10);\n  }\n`;\n\nconst ErrorMsg = styled.div`\n  color: ${({ theme }) => theme.colors.error};\n  font-size: 0.98em;\n  margin-bottom: 8px;\n  margin-top: 2px;\n`;\n\nconst SectionHeadline = styled(Headline)`\n  margin-top: 38px;\n  margin-bottom: 10px;\n  font-size: 1.18em;\n  color: ${({ theme }) => theme.colors.primary};\n`;\n\nconst MascotSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 8px;\n  margin-top: 30px;\n`;\n\nconst BearWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  min-width: 100px;\n  max-width: 140px;\n  margin: 0 auto 0 auto;\n  margin-bottom: -85px;\n  @media (max-width: 600px) {\n    max-width: 90px;\n    min-width: 70px;\n  }\n`;\n\nfunction getDefaultYearRange() {\n  const now = new Date();\n  const year = now.getFullYear();\n  return {\n    from: `${year}-01-01`,\n    to: `${year}-12-31`,\n  };\n}\nfunction getLastNDaysRange(n: number) {\n  const now = new Date();\n  const to = now.toISOString().slice(0, 10);\n  const fromDate = new Date(now.getTime() - (n - 1) * 24 * 60 * 60 * 1000);\n  const from = fromDate.toISOString().slice(0, 10);\n  return { from, to };\n}\n\nconst tooltips = {\n  userGrowth: 'Zeigt das Wachstum der Nutzerbasis im gewählten Zeitraum.',\n  activeUsers: 'Listet Nutzer, die in den letzten X Tagen aktiv waren.',\n  checkinTrends: 'Alle Check-ins (An- und Abmeldungen) im gewählten Zeitraum.',\n  activeGroups: 'Gruppen mit Aktivität (z.B. Check-ins, Nachrichten) im Zeitraum.',\n  messageVolume: 'Gesendete Nachrichten im gewählten Zeitraum.',\n  notificationStats: 'Alle Benachrichtigungen, die im Zeitraum verschickt wurden.',\n  failedLogins: 'Alle fehlgeschlagenen Login-Versuche im Zeitraum.',\n  groupAttendance: 'Durchschnittliche Anwesenheit pro Gruppe im Zeitraum.',\n  checkinMethods: 'Verteilung der Check-in Methoden (QR-Code oder manuell) im Zeitraum.'\n};\n\n// Helper to trigger file download via fetch\nasync function handleExport(url: string, filename: string) {\n  try {\n    const res = await fetch(url, { credentials: 'include' });\n    if (!res.ok) {\n      const text = await res.text();\n      alert('Export fehlgeschlagen: ' + (text || res.status));\n      return;\n    }\n    const blob = await res.blob();\n    const downloadUrl = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = downloadUrl;\n    a.download = filename;\n    document.body.appendChild(a);\n    a.click();\n    a.remove();\n    window.URL.revokeObjectURL(downloadUrl);\n  } catch (e) {\n    alert('Export fehlgeschlagen: ' + (e as Error).message);\n  }\n}\n\nconst Reports: React.FC = () => {\n  // Shared state for all date range reports\n  const defaultRange = getDefaultYearRange();\n  const [userGrowth, setUserGrowth] = useState(defaultRange);\n  const [checkinTrends, setCheckinTrends] = useState(defaultRange);\n  const [activeGroups, setActiveGroups] = useState(defaultRange);\n  const [messageVolume, setMessageVolume] = useState(defaultRange);\n  const [notificationStats, setNotificationStats] = useState(defaultRange);\n  const [failedLogins, setFailedLogins] = useState(defaultRange);\n  const [groupAttendance, setGroupAttendance] = useState(defaultRange);\n  const [checkinMethods, setCheckinMethods] = useState(defaultRange);\n  const [activeUsersDays, setActiveUsersDays] = useState(7);\n\n  // Validation helpers\n  function isRangeInvalid(range: { from: string; to: string }) {\n    return range.from > range.to;\n  }\n  function isDaysInvalid(days: number) {\n    return isNaN(days) || days < 1 || days > 365;\n  }\n\n  // Preset handlers\n  function setPreset(setter: (r: { from: string; to: string }) => void, preset: 'year' | '30' | '7') {\n    if (preset === 'year') setter(getDefaultYearRange());\n    if (preset === '30') setter(getLastNDaysRange(30));\n    if (preset === '7') setter(getLastNDaysRange(7));\n  }\n\n  return (\n  <>\n    <Header title=\"Berichte & Auswertungen\" />\n      <MascotSection>\n        <BearWrapper>\n          <MascotBear size={120} mood=\"happy\" />\n        </BearWrapper>\n        <Headline as=\"div\" style={{ fontSize: 18, margin: 0, color: '#388E3C', textAlign: 'center' }}>\n          Willkommen zu den plattformweiten Berichten!<br />\n          Hier findest du alle wichtigen Auswertungen für Wachstum, Aktivität und Sicherheit.\n        </Headline>\n      </MascotSection>\n      <SectionHeadline as=\"h2\">Nutzer & Aktivität</SectionHeadline>\n      <ReportGrid>\n        {/* Benutzerwachstum */}\n        <ReportCard>\n          <ReportIcon><FaUsers /></ReportIcon>\n          <ReportTitleRow>\n            <ReportTitle>Benutzerwachstum</ReportTitle>\n            <TooltipIcon tabIndex={0} aria-label=\"Info\">\n              <FaInfoCircle />\n              <Tooltip>{tooltips.userGrowth}</Tooltip>\n            </TooltipIcon>\n          </ReportTitleRow>\n          <ReportSubtitle>Neue Nutzer im Zeitraum.</ReportSubtitle>\n          <CardSection>\n            <PresetRow>\n              <PresetButton onClick={() => setPreset(setUserGrowth, 'year')}>Dieses Jahr</PresetButton>\n              <PresetButton onClick={() => setPreset(setUserGrowth, '30')}>Letzte 30 Tage</PresetButton>\n              <PresetButton onClick={() => setPreset(setUserGrowth, '7')}>Letzte 7 Tage</PresetButton>\n            </PresetRow>\n            <ReportInputRow>\n              <label>Von:\n                <input type=\"date\" value={userGrowth.from} onChange={e => setUserGrowth(r => ({ ...r, from: e.target.value }))} />\n              </label>\n              <label>Bis:\n                <input type=\"date\" value={userGrowth.to} onChange={e => setUserGrowth(r => ({ ...r, to: e.target.value }))} />\n              </label>\n            </ReportInputRow>\n          </CardSection>\n          {isRangeInvalid(userGrowth) && <ErrorMsg>Das Enddatum darf nicht vor dem Startdatum liegen.</ErrorMsg>}\n          <ReportButtonRow>\n            <ReportButton as=\"button\" onClick={() => handleExport(`/api/reports/user-growth?from=${userGrowth.from}&to=${userGrowth.to}&format=pdf`, `user-growth-${userGrowth.from}_to_${userGrowth.to}.pdf`)} disabled={isRangeInvalid(userGrowth)}>PDF Export</ReportButton>\n            <ReportButton as=\"button\" onClick={() => handleExport(`/api/reports/user-growth?from=${userGrowth.from}&to=${userGrowth.to}&format=csv`, `user-growth-${userGrowth.from}_to_${userGrowth.to}.csv`)} disabled={isRangeInvalid(userGrowth)}>CSV Export</ReportButton>\n          </ReportButtonRow>\n        </ReportCard>\n        {/* Aktive Nutzer */}\n        <ReportCard>\n          <ReportIcon><FaUserCheck /></ReportIcon>\n          <ReportTitleRow>\n            <ReportTitle>Aktive Nutzer</ReportTitle>\n            <TooltipIcon tabIndex={0} aria-label=\"Info\">\n              <FaInfoCircle />\n              <Tooltip>{tooltips.activeUsers}</Tooltip>\n            </TooltipIcon>\n          </ReportTitleRow>\n          <ReportSubtitle>Nutzer mit Aktivität in den letzten X Tagen.</ReportSubtitle>\n          <CardSection>\n            <PresetRow>\n              <PresetButton onClick={() => setActiveUsersDays(7)}>Letzte 7 Tage</PresetButton>\n              <PresetButton onClick={() => setActiveUsersDays(30)}>Letzte 30 Tage</PresetButton>\n              <PresetButton onClick={() => setActiveUsersDays(90)}>Letzte 90 Tage</PresetButton>\n            </PresetRow>\n            <ReportInputRow>\n              <label>Tage:\n                <input type=\"number\" min={1} max={365} value={activeUsersDays} onChange={e => setActiveUsersDays(Number(e.target.value))} />\n              </label>\n            </ReportInputRow>\n          </CardSection>\n          {isDaysInvalid(activeUsersDays) && <ErrorMsg>Bitte gib eine Zahl zwischen 1 und 365 ein.</ErrorMsg>}\n          <ReportButtonRow>\n            <ReportButton as=\"button\" onClick={() => handleExport(`/api/reports/active-users?days=${activeUsersDays}&format=pdf`, `active-users-${activeUsersDays}days.pdf`)} disabled={isDaysInvalid(activeUsersDays)}>PDF Export</ReportButton>\n            <ReportButton as=\"button\" onClick={() => handleExport(`/api/reports/active-users?days=${activeUsersDays}&format=csv`, `active-users-${activeUsersDays}days.csv`)} disabled={isDaysInvalid(activeUsersDays)}>CSV Export</ReportButton>\n          </ReportButtonRow>\n        </ReportCard>\n        {/* Check-in Trends */}\n        <ReportCard>\n          <ReportIcon><FaChartLine /></ReportIcon>\n          <ReportTitleRow>\n            <ReportTitle>Check-in Trends</ReportTitle>\n            <TooltipIcon tabIndex={0} aria-label=\"Info\">\n              <FaInfoCircle />\n              <Tooltip>{tooltips.checkinTrends}</Tooltip>\n            </TooltipIcon>\n          </ReportTitleRow>\n          <ReportSubtitle>Alle Check-ins im Zeitraum.</ReportSubtitle>\n          <CardSection>\n            <PresetRow>\n              <PresetButton onClick={() => setPreset(setCheckinTrends, 'year')}>Dieses Jahr</PresetButton>\n              <PresetButton onClick={() => setPreset(setCheckinTrends, '30')}>Letzte 30 Tage</PresetButton>\n              <PresetButton onClick={() => setPreset(setCheckinTrends, '7')}>Letzte 7 Tage</PresetButton>\n            </PresetRow>\n            <ReportInputRow>\n              <label>Von:\n                <input type=\"date\" value={checkinTrends.from} onChange={e => setCheckinTrends(r => ({ ...r, from: e.target.value }))} />\n              </label>\n              <label>Bis:\n                <input type=\"date\" value={checkinTrends.to} onChange={e => setCheckinTrends(r => ({ ...r, to: e.target.value }))} />\n              </label>\n            </ReportInputRow>\n          </CardSection>\n          {isRangeInvalid(checkinTrends) && <ErrorMsg>Das Enddatum darf nicht vor dem Startdatum liegen.</ErrorMsg>}\n          <ReportButtonRow>\n            <ReportButton as=\"button\" onClick={() => handleExport(`/api/reports/checkin-trends?from=${checkinTrends.from}&to=${checkinTrends.to}&format=pdf`, `checkin-trends-${checkinTrends.from}_to_${checkinTrends.to}.pdf`)} disabled={isRangeInvalid(checkinTrends)}>PDF Export</ReportButton>\n            <ReportButton as=\"button\" onClick={() => handleExport(`/api/reports/checkin-trends?from=${checkinTrends.from}&to=${checkinTrends.to}&format=csv`, `checkin-trends-${checkinTrends.from}_to_${checkinTrends.to}.csv`)} disabled={isRangeInvalid(checkinTrends)}>CSV Export</ReportButton>\n          </ReportButtonRow>\n        </ReportCard>\n        {/* Aktive Gruppen */}\n        <ReportCard>\n          <ReportIcon><FaLayerGroup /></ReportIcon>\n          <ReportTitleRow>\n            <ReportTitle>Aktive Gruppen</ReportTitle>\n            <TooltipIcon tabIndex={0} aria-label=\"Info\">\n              <FaInfoCircle />\n              <Tooltip>{tooltips.activeGroups}</Tooltip>\n            </TooltipIcon>\n          </ReportTitleRow>\n          <ReportSubtitle>Gruppen mit Aktivität im Zeitraum.</ReportSubtitle>\n          <CardSection>\n            <PresetRow>\n              <PresetButton onClick={() => setPreset(setActiveGroups, 'year')}>Dieses Jahr</PresetButton>\n              <PresetButton onClick={() => setPreset(setActiveGroups, '30')}>Letzte 30 Tage</PresetButton>\n              <PresetButton onClick={() => setPreset(setActiveGroups, '7')}>Letzte 7 Tage</PresetButton>\n            </PresetRow>\n            <ReportInputRow>\n              <label>Von:\n                <input type=\"date\" value={activeGroups.from} onChange={e => setActiveGroups(r => ({ ...r, from: e.target.value }))} />\n              </label>\n              <label>Bis:\n                <input type=\"date\" value={activeGroups.to} onChange={e => setActiveGroups(r => ({ ...r, to: e.target.value }))} />\n              </label>\n            </ReportInputRow>\n          </CardSection>\n          {isRangeInvalid(activeGroups) && <ErrorMsg>Das Enddatum darf nicht vor dem Startdatum liegen.</ErrorMsg>}\n          <ReportButtonRow>\n            <ReportButton as=\"button\" onClick={() => handleExport(`/api/reports/active-groups?from=${activeGroups.from}&to=${activeGroups.to}&format=pdf`, `active-groups-${activeGroups.from}_to_${activeGroups.to}.pdf`)} disabled={isRangeInvalid(activeGroups)}>PDF Export</ReportButton>\n            <ReportButton as=\"button\" onClick={() => handleExport(`/api/reports/active-groups?from=${activeGroups.from}&to=${activeGroups.to}&format=csv`, `active-groups-${activeGroups.from}_to_${activeGroups.to}.csv`)} disabled={isRangeInvalid(activeGroups)}>CSV Export</ReportButton>\n          </ReportButtonRow>\n        </ReportCard>\n        {/* Nachrichtenvolumen */}\n        <ReportCard>\n          <ReportIcon><FaEnvelope /></ReportIcon>\n          <ReportTitleRow>\n            <ReportTitle>Nachrichtenvolumen</ReportTitle>\n            <TooltipIcon tabIndex={0} aria-label=\"Info\">\n              <FaInfoCircle />\n              <Tooltip>{tooltips.messageVolume}</Tooltip>\n            </TooltipIcon>\n          </ReportTitleRow>\n          <ReportSubtitle>Anzahl der Nachrichten im Zeitraum.</ReportSubtitle>\n          <CardSection>\n            <PresetRow>\n              <PresetButton onClick={() => setPreset(setMessageVolume, 'year')}>Dieses Jahr</PresetButton>\n              <PresetButton onClick={() => setPreset(setMessageVolume, '30')}>Letzte 30 Tage</PresetButton>\n              <PresetButton onClick={() => setPreset(setMessageVolume, '7')}>Letzte 7 Tage</PresetButton>\n            </PresetRow>\n            <ReportInputRow>\n              <label>Von:\n                <input type=\"date\" value={messageVolume.from} onChange={e => setMessageVolume(r => ({ ...r, from: e.target.value }))} />\n              </label>\n              <label>Bis:\n                <input type=\"date\" value={messageVolume.to} onChange={e => setMessageVolume(r => ({ ...r, to: e.target.value }))} />\n              </label>\n            </ReportInputRow>\n          </CardSection>\n          {isRangeInvalid(messageVolume) && <ErrorMsg>Das Enddatum darf nicht vor dem Startdatum liegen.</ErrorMsg>}\n          <ReportButtonRow>\n            <ReportButton as=\"button\" onClick={() => handleExport(`/api/reports/message-volume?from=${messageVolume.from}&to=${messageVolume.to}&format=pdf`, `message-volume-${messageVolume.from}_to_${messageVolume.to}.pdf`)} disabled={isRangeInvalid(messageVolume)}>PDF Export</ReportButton>\n            <ReportButton as=\"button\" onClick={() => handleExport(`/api/reports/message-volume?from=${messageVolume.from}&to=${messageVolume.to}&format=csv`, `message-volume-${messageVolume.from}_to_${messageVolume.to}.csv`)} disabled={isRangeInvalid(messageVolume)}>CSV Export</ReportButton>\n          </ReportButtonRow>\n        </ReportCard>\n        {/* Benachrichtigungsstatistiken */}\n        <ReportCard>\n          <ReportIcon><FaBell /></ReportIcon>\n          <ReportTitleRow>\n            <ReportTitle>Benachrichtigungsstatistiken</ReportTitle>\n            <TooltipIcon tabIndex={0} aria-label=\"Info\">\n              <FaInfoCircle />\n              <Tooltip>{tooltips.notificationStats}</Tooltip>\n            </TooltipIcon>\n          </ReportTitleRow>\n          <ReportSubtitle>Alle Benachrichtigungen im Zeitraum.</ReportSubtitle>\n          <CardSection>\n            <PresetRow>\n              <PresetButton onClick={() => setPreset(setNotificationStats, 'year')}>Dieses Jahr</PresetButton>\n              <PresetButton onClick={() => setPreset(setNotificationStats, '30')}>Letzte 30 Tage</PresetButton>\n              <PresetButton onClick={() => setPreset(setNotificationStats, '7')}>Letzte 7 Tage</PresetButton>\n            </PresetRow>\n            <ReportInputRow>\n              <label>Von:\n                <input type=\"date\" value={notificationStats.from} onChange={e => setNotificationStats(r => ({ ...r, from: e.target.value }))} />\n              </label>\n              <label>Bis:\n                <input type=\"date\" value={notificationStats.to} onChange={e => setNotificationStats(r => ({ ...r, to: e.target.value }))} />\n              </label>\n            </ReportInputRow>\n          </CardSection>\n          {isRangeInvalid(notificationStats) && <ErrorMsg>Das Enddatum darf nicht vor dem Startdatum liegen.</ErrorMsg>}\n          <ReportButtonRow>\n            <ReportButton as=\"button\" onClick={() => handleExport(`/api/reports/notification-stats?from=${notificationStats.from}&to=${notificationStats.to}&format=pdf`, `notification-stats-${notificationStats.from}_to_${notificationStats.to}.pdf`)} disabled={isRangeInvalid(notificationStats)}>PDF Export</ReportButton>\n            <ReportButton as=\"button\" onClick={() => handleExport(`/api/reports/notification-stats?from=${notificationStats.from}&to=${notificationStats.to}&format=csv`, `notification-stats-${notificationStats.from}_to_${notificationStats.to}.csv`)} disabled={isRangeInvalid(notificationStats)}>CSV Export</ReportButton>\n          </ReportButtonRow>\n        </ReportCard>\n      </ReportGrid>\n      <SectionHeadline as=\"h2\">Sicherheit & Qualität</SectionHeadline>\n      <ReportGrid>\n        {/* Fehlgeschlagene Logins */}\n        <ReportCard>\n          <ReportIcon><FaLock /></ReportIcon>\n          <ReportTitleRow>\n            <ReportTitle>Fehlgeschlagene Logins</ReportTitle>\n            <TooltipIcon tabIndex={0} aria-label=\"Info\">\n              <FaInfoCircle />\n              <Tooltip>{tooltips.failedLogins}</Tooltip>\n            </TooltipIcon>\n          </ReportTitleRow>\n          <ReportSubtitle>Alle fehlgeschlagenen Anmeldeversuche im Zeitraum.</ReportSubtitle>\n          <CardSection>\n            <PresetRow>\n              <PresetButton onClick={() => setPreset(setFailedLogins, 'year')}>Dieses Jahr</PresetButton>\n              <PresetButton onClick={() => setPreset(setFailedLogins, '30')}>Letzte 30 Tage</PresetButton>\n              <PresetButton onClick={() => setPreset(setFailedLogins, '7')}>Letzte 7 Tage</PresetButton>\n            </PresetRow>\n            <ReportInputRow>\n              <label>Von:\n                <input type=\"date\" value={failedLogins.from} onChange={e => setFailedLogins(r => ({ ...r, from: e.target.value }))} />\n              </label>\n              <label>Bis:\n                <input type=\"date\" value={failedLogins.to} onChange={e => setFailedLogins(r => ({ ...r, to: e.target.value }))} />\n              </label>\n            </ReportInputRow>\n          </CardSection>\n          {isRangeInvalid(failedLogins) && <ErrorMsg>Das Enddatum darf nicht vor dem Startdatum liegen.</ErrorMsg>}\n          <ReportButtonRow>\n            <ReportButton as=\"button\" onClick={() => handleExport(`/api/reports/failed-logins?from=${failedLogins.from}&to=${failedLogins.to}&format=pdf`, `failed-logins-${failedLogins.from}_to_${failedLogins.to}.pdf`)} disabled={isRangeInvalid(failedLogins)}>PDF Export</ReportButton>\n            <ReportButton as=\"button\" onClick={() => handleExport(`/api/reports/failed-logins?from=${failedLogins.from}&to=${failedLogins.to}&format=csv`, `failed-logins-${failedLogins.from}_to_${failedLogins.to}.csv`)} disabled={isRangeInvalid(failedLogins)}>CSV Export</ReportButton>\n          </ReportButtonRow>\n        </ReportCard>\n        {/* Gruppenanwesenheit */}\n        <ReportCard>\n          <ReportIcon><FaUserShield /></ReportIcon>\n          <ReportTitleRow>\n            <ReportTitle>Gruppenanwesenheit</ReportTitle>\n            <TooltipIcon tabIndex={0} aria-label=\"Info\">\n              <FaInfoCircle />\n              <Tooltip>{tooltips.groupAttendance}</Tooltip>\n            </TooltipIcon>\n          </ReportTitleRow>\n          <ReportSubtitle>Durchschnittliche Anwesenheit pro Gruppe im Zeitraum.</ReportSubtitle>\n          <CardSection>\n            <PresetRow>\n              <PresetButton onClick={() => setPreset(setGroupAttendance, 'year')}>Dieses Jahr</PresetButton>\n              <PresetButton onClick={() => setPreset(setGroupAttendance, '30')}>Letzte 30 Tage</PresetButton>\n              <PresetButton onClick={() => setPreset(setGroupAttendance, '7')}>Letzte 7 Tage</PresetButton>\n            </PresetRow>\n            <ReportInputRow>\n              <label>Von:\n                <input type=\"date\" value={groupAttendance.from} onChange={e => setGroupAttendance(r => ({ ...r, from: e.target.value }))} />\n              </label>\n              <label>Bis:\n                <input type=\"date\" value={groupAttendance.to} onChange={e => setGroupAttendance(r => ({ ...r, to: e.target.value }))} />\n              </label>\n            </ReportInputRow>\n          </CardSection>\n          {isRangeInvalid(groupAttendance) && <ErrorMsg>Das Enddatum darf nicht vor dem Startdatum liegen.</ErrorMsg>}\n          <ReportButtonRow>\n            <ReportButton as=\"button\" onClick={() => handleExport(`/api/reports/group-attendance?from=${groupAttendance.from}&to=${groupAttendance.to}&format=pdf`, `group-attendance-${groupAttendance.from}_to_${groupAttendance.to}.pdf`)} disabled={isRangeInvalid(groupAttendance)}>PDF Export</ReportButton>\n            <ReportButton as=\"button\" onClick={() => handleExport(`/api/reports/group-attendance?from=${groupAttendance.from}&to=${groupAttendance.to}&format=csv`, `group-attendance-${groupAttendance.from}_to_${groupAttendance.to}.csv`)} disabled={isRangeInvalid(groupAttendance)}>CSV Export</ReportButton>\n          </ReportButtonRow>\n        </ReportCard>\n        {/* Check-in Methoden */}\n        <ReportCard>\n          <ReportIcon><FaQrcode /></ReportIcon>\n          <ReportTitleRow>\n            <ReportTitle>Check-in Methoden</ReportTitle>\n            <TooltipIcon tabIndex={0} aria-label=\"Info\">\n              <FaInfoCircle />\n              <Tooltip>{tooltips.checkinMethods}</Tooltip>\n            </TooltipIcon>\n          </ReportTitleRow>\n          <ReportSubtitle>Verteilung der Check-in Methoden (QR/Manuell).</ReportSubtitle>\n          <CardSection>\n            <PresetRow>\n              <PresetButton onClick={() => setPreset(setCheckinMethods, 'year')}>Dieses Jahr</PresetButton>\n              <PresetButton onClick={() => setPreset(setCheckinMethods, '30')}>Letzte 30 Tage</PresetButton>\n              <PresetButton onClick={() => setPreset(setCheckinMethods, '7')}>Letzte 7 Tage</PresetButton>\n            </PresetRow>\n            <ReportInputRow>\n              <label>Von:\n                <input type=\"date\" value={checkinMethods.from} onChange={e => setCheckinMethods(r => ({ ...r, from: e.target.value }))} />\n              </label>\n              <label>Bis:\n                <input type=\"date\" value={checkinMethods.to} onChange={e => setCheckinMethods(r => ({ ...r, to: e.target.value }))} />\n              </label>\n            </ReportInputRow>\n          </CardSection>\n          {isRangeInvalid(checkinMethods) && <ErrorMsg>Das Enddatum darf nicht vor dem Startdatum liegen.</ErrorMsg>}\n          <ReportButtonRow>\n            <ReportButton as=\"button\" onClick={() => handleExport(`/api/reports/checkin-methods?from=${checkinMethods.from}&to=${checkinMethods.to}&format=pdf`, `checkin-methods-${checkinMethods.from}_to_${checkinMethods.to}.pdf`)} disabled={isRangeInvalid(checkinMethods)}>PDF Export</ReportButton>\n            <ReportButton as=\"button\" onClick={() => handleExport(`/api/reports/checkin-methods?from=${checkinMethods.from}&to=${checkinMethods.to}&format=csv`, `checkin-methods-${checkinMethods.from}_to_${checkinMethods.to}.csv`)} disabled={isRangeInvalid(checkinMethods)}>CSV Export</ReportButton>\n          </ReportButtonRow>\n        </ReportCard>\n      </ReportGrid>\n  </>\n);\n};\n\nexport default Reports; "],"names":["ReportGrid","styled","div","_templateObject","_taggedTemplateLiteral","ReportCard","Card","_templateObject2","_ref","theme","colors","border","_ref2","mode","_ref3","accent","_ref4","ReportIcon","_templateObject3","_ref5","ReportTitleRow","_templateObject4","ReportTitle","h3","_templateObject5","_ref6","primary","TooltipIcon","span","_templateObject6","_ref7","_ref8","Tooltip","_templateObject7","_ref9","surface","_ref0","textPrimary","ReportSubtitle","p","_templateObject8","_ref1","textSecondary","CardSection","_templateObject9","_ref10","PresetRow","_templateObject0","PresetButton","button","_templateObject1","_ref11","_ref12","ReportInputRow","_templateObject10","_ref13","_ref14","_ref15","background","_ref16","_ref17","ReportButtonRow","_templateObject11","ReportButton","a","_templateObject12","_ref18","disabled","_ref19","_ref20","_ref21","primaryDark","ErrorMsg","_templateObject13","_ref22","error","SectionHeadline","Headline","_templateObject14","_ref23","MascotSection","_templateObject15","BearWrapper","_templateObject16","getDefaultYearRange","year","Date","getFullYear","from","concat","to","getLastNDaysRange","n","now","toISOString","slice","getTime","tooltips","async","handleExport","url","filename","res","fetch","credentials","ok","text","alert","status","blob","downloadUrl","window","URL","createObjectURL","document","createElement","href","download","body","appendChild","click","remove","revokeObjectURL","e","message","Reports","defaultRange","userGrowth","setUserGrowth","useState","checkinTrends","setCheckinTrends","activeGroups","setActiveGroups","messageVolume","setMessageVolume","notificationStats","setNotificationStats","failedLogins","setFailedLogins","groupAttendance","setGroupAttendance","checkinMethods","setCheckinMethods","activeUsersDays","setActiveUsersDays","isRangeInvalid","range","isDaysInvalid","days","isNaN","setPreset","setter","preset","_jsxs","_Fragment","children","_jsx","Header","title","MascotBear","size","mood","as","style","fontSize","margin","color","textAlign","FaUsers","tabIndex","FaInfoCircle","onClick","type","value","onChange","r","_objectSpread","target","FaUserCheck","min","max","Number","FaChartLine","FaLayerGroup","FaEnvelope","FaBell","FaLock","FaUserShield","FaQrcode"],"sourceRoot":""}