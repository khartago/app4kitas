{"version":3,"file":"static/js/10.32afb350.chunk.js","mappings":"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","sources":["services/educatorApi.ts","pages/educator/Notizen.tsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = '/api';\n\n// Holt alle Gruppen für Erzieher\nexport const getGruppen = async () => {\n  const res = await axios.get(`${API_URL}/groups`, { withCredentials: true });\n  return res.data;\n};\n\n// Holt alle Kinder einer Gruppe\nexport const getKinderByGruppe = async (groupId: string) => {\n  const res = await axios.get(`${API_URL}/groups/${groupId}/children`, { withCredentials: true });\n  return res.data;\n};\n\n// Check-in/out für ein Kind\nexport const checkinKind = async (childId: string, type: 'IN' | 'OUT', method: 'QR' | 'MANUAL') => {\n  const res = await axios.post(`${API_URL}/checkin`, { childId, type, method }, { withCredentials: true });\n  return res.data;\n};\n\n// Holt die heutigen Kinder der Erziehergruppe\nexport const fetchTodaysChildren = async (groupId: string) => {\n  const res = await axios.get(`${API_URL}/groups/${groupId}/children?date=heute`, { withCredentials: true });\n  return res.data;\n};\n\n// Holt ausstehende Check-ins\nexport const fetchPendingCheckins = async (groupId: string) => {\n  const res = await axios.get(`${API_URL}/groups/${groupId}/pending-checkins`, { withCredentials: true });\n  return res.data;\n};\n\n// Holt zugewiesene Kinder\nexport const fetchAssignedChildren = async (educatorId: string) => {\n  const res = await axios.get(`${API_URL}/educators/${educatorId}/children`, { withCredentials: true });\n  return res.data;\n};\n\n// Holt die eigene Gruppe\nexport const fetchMyGroup = async (educatorId: string) => {\n  const res = await axios.get(`${API_URL}/educators/${educatorId}/group`, { withCredentials: true });\n  return res.data;\n};\n\n// Holt Nachrichten\nexport const fetchMessages = async (childId?: string, groupId?: string) => {\n  let url = `${API_URL}/messages`;\n  if (childId) url += `/child/${childId}`;\n  else if (groupId) url += `/group/${groupId}`;\n  const res = await axios.get(url, { withCredentials: true });\n  return res.data;\n};\n\n// Sendet eine Nachricht\nexport const sendMessage = async (data: { content?: string; childId?: string; groupId?: string; file?: File }) => {\n  const formData = new FormData();\n  if (data.content) formData.append('content', data.content);\n  if (data.childId) formData.append('childId', data.childId);\n  if (data.groupId) formData.append('groupId', data.groupId);\n  if (data.file) formData.append('file', data.file);\n  const res = await axios.post(`${API_URL}/message`, formData, {\n    headers: { 'Content-Type': 'multipart/form-data', withCredentials: true },\n  });\n  return res.data;\n};\n\n/**\n * Notizen eines Kindes abrufen\n * @param {string} childId\n * @returns {Promise<any[]>}\n */\nexport async function fetchChildrenNotes(childId: string): Promise<any[]> {\n  const res = await fetch(`${API_URL}/notes/child/${childId}`, {\n    credentials: 'include',\n  });\n  if (!res.ok) throw new Error('Fehler beim Laden der Notizen');\n  return res.json();\n}\n\n/**\n * Neue Notiz für ein Kind anlegen\n * @param {string} childId\n * @param {string} content\n * @param {File | null} [file]\n * @returns {Promise<any>}\n */\nexport async function addNote(childId: string, content: string, file?: File | null): Promise<any> {\n  const formData = new FormData();\n  formData.append('childId', childId);\n  formData.append('content', content);\n  if (file) formData.append('file', file);\n  const res = await fetch(`${API_URL}/notes`, {\n    method: 'POST',\n    credentials: 'include',\n    body: formData,\n  });\n  if (!res.ok) throw new Error('Fehler beim Speichern der Notiz');\n  return res.json();\n}\n\n// Weitere Erzieher-APIs können hier ergänzt werden ","import React, { useEffect, useState, useContext } from 'react';\nimport styled from 'styled-components';\nimport { useUser } from '../../components/UserContext';\nimport { fetchChildrenNotes, addNote } from '../../services/educatorApi';\nimport { Card, AnimatedMascotsLoader, ErrorMsg, Headline, Button, Input } from '../../components/ui/AdminDashboardUI';\nimport Header from '../../components/Header';\n\nconst Notizen: React.FC = () => {\n  const { benutzer } = useUser();\n  const [notes, setNotes] = useState<any[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [newNote, setNewNote] = useState<{ childId: string, content: string }>({ childId: '', content: '' });\n\n  useEffect(() => {\n    if (!benutzer || benutzer.role !== 'EDUCATOR') return;\n    setLoading(true);\n    fetchChildrenNotes(benutzer.id)\n      .then(setNotes)\n      .catch(() => setError('Fehler beim Laden der Notizen.'))\n      .finally(() => setLoading(false));\n  }, [benutzer]);\n\n  const handleAddNote = async () => {\n    if (!benutzer || !newNote.childId || !newNote.content) return;\n    setLoading(true);\n    try {\n      await addNote(newNote.childId, newNote.content);\n      setNotes(await fetchChildrenNotes(benutzer.id));\n      setNewNote({ childId: '', content: '' });\n    } catch {\n      setError('Fehler beim Hinzufügen der Notiz.');\n    }\n    setLoading(false);\n  };\n\n  if (!benutzer || benutzer.role !== 'EDUCATOR') return <ErrorMsg>Zugriff verweigert</ErrorMsg>;\n  if (loading) return <AnimatedMascotsLoader text=\"Lade Notizen...\" />;\n  if (error) return <ErrorMsg>{error}</ErrorMsg>;\n\n  return (\n    <>\n      <Header title=\"Tagesnotizen\" />\n      <div style={{marginTop: 64}}>\n      <Input\n        placeholder=\"Kind-ID\"\n        value={newNote.childId}\n        onChange={e => setNewNote({ ...newNote, childId: e.target.value })}\n      />\n      <Input\n        placeholder=\"Notiz\"\n        value={newNote.content}\n        onChange={e => setNewNote({ ...newNote, content: e.target.value })}\n      />\n      <Button onClick={handleAddNote}>Hinzufügen</Button>\n      <ul>\n        {notes.map(note => (\n          <Card key={note.id}>\n            <h3>{note.childName}</h3>\n            <p>{note.content}</p>\n            <p>{note.createdAt}</p>\n          </Card>\n        ))}\n      </ul>\n    </div>\n    </>\n  );\n};\n\nexport default Notizen; "],"names":["API_URL","fetchTodaysChildren","async","axios","get","concat","groupId","withCredentials","data","fetchPendingCheckins","fetchAssignedChildren","educatorId","fetchMyGroup","fetchMessages","childId","url","sendMessage","formData","FormData","content","append","file","post","headers","fetchChildrenNotes","res","fetch","credentials","ok","Error","json","addNote","method","body","Notizen","benutzer","useUser","notes","setNotes","useState","loading","setLoading","error","setError","newNote","setNewNote","useEffect","role","id","then","catch","finally","_jsx","AnimatedMascotsLoader","text","ErrorMsg","children","_jsxs","_Fragment","Header","title","style","marginTop","Input","placeholder","value","onChange","e","_objectSpread","target","Button","onClick","_unused","map","note","Card","childName","createdAt"],"sourceRoot":""}