{"version":3,"file":"static/js/856.d35f2ce2.chunk.js","mappings":"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","sources":["pages/admin/Statistiken.tsx","services/adminApi.ts","services/reportApi.ts"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport MascotBear from '../../components/ui/MascotBear';\nimport { Headline, Button } from '../../components/ui/AdminDashboardUI';\nimport { fetchCheckinStats } from '../../services/adminApi';\nimport { fetchMonthlyReport, exportMonthlyReport } from '../../services/reportApi';\nimport Header from '../../components/Header';\n\nconst ChartWrapper = styled.div`\n  display: flex;\n  align-items: flex-end;\n  height: 200px;\n  margin-bottom: 32px;\n`;\nconst Bar = styled.div<{ height: number }>`\n  background: #4CAF50;\n  width: 32px;\n  margin: 0 8px;\n  border-radius: 8px 8px 0 0;\n  height: ${props => props.height}px;\n`;\nconst BarLabel = styled.div`\n  text-align: center;\n  font-size: 12px;\n  margin-top: 4px;\n`;\nconst ExportRow = styled.div`\n  display: flex;\n  gap: 12px;\n  margin-bottom: 16px;\n`;\nconst EmptyState = styled.div`\n  text-align: center;\n  margin: 48px 0;\n`;\n\nconst Statistiken: React.FC = () => {\n  const [stats, setStats] = useState<any[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [month, setMonth] = useState(() => new Date().toISOString().slice(0, 7));\n  const [report, setReport] = useState<any[]>([]);\n  const [reportLoading, setReportLoading] = useState(false);\n  const [reportError, setReportError] = useState<string | null>(null);\n\n  useEffect(() => {\n    setLoading(true);\n    fetchCheckinStats()\n      .then(setStats)\n      .catch(() => setError('Fehler beim Laden der Statistiken.'))\n      .finally(() => setLoading(false));\n  }, []);\n\n  useEffect(() => {\n    setReportLoading(true);\n    fetchMonthlyReport(month)\n      .then(data => setReport(data.report))\n      .catch(() => setReportError('Fehler beim Laden des Monatsberichts.'))\n      .finally(() => setReportLoading(false));\n  }, [month]);\n\n  return (\n    <>\n      <Header title=\"Check-in/out Statistiken\" />\n      <div style={{marginTop: 64}}>\n        <Headline>Check-in/out Statistiken (letzte Woche)</Headline>\n        <ExportRow>\n          <Button onClick={() => exportMonthlyReport(month)}>Monatsbericht als CSV exportieren</Button>\n        </ExportRow>\n        {loading ? (\n          <div>L채dt...</div>\n        ) : stats.length === 0 ? (\n          <EmptyState>\n            <MascotBear size={80} mood=\"help\" />\n            <div>Keine Statistikdaten gefunden.</div>\n          </EmptyState>\n        ) : (\n          <ChartWrapper>\n            {stats.map((day, idx) => (\n              <div key={idx}>\n                <Bar height={day.count * 10} />\n                <BarLabel>{day.label}</BarLabel>\n              </div>\n            ))}\n          </ChartWrapper>\n        )}\n        <Headline>Monatsbericht</Headline>\n        <input type=\"month\" value={month} onChange={e => setMonth(e.target.value)} />\n        {reportLoading ? (\n          <div>L채dt...</div>\n        ) : reportError ? (\n          <div style={{ color: 'red' }}>{reportError}</div>\n        ) : report.length === 0 ? (\n          <EmptyState>\n            <MascotBear size={80} mood=\"help\" />\n            <div>Keine Berichtsdaten gefunden.</div>\n          </EmptyState>\n        ) : (\n          <table style={{ width: '100%', marginTop: 24 }}>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Anwesenheitstage</th>\n              </tr>\n            </thead>\n            <tbody>\n              {report.map(row => (\n                <tr key={row.childId}>\n                  <td>{row.name}</td>\n                  <td>{row.checkInDays}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Statistiken; ","import axios from 'axios';\n\nconst API_URL = '/api';\n\n// Holt Admin-Statistiken (Platzhalter, Backend-Route ggf. anpassen)\nexport const getAdminStats = async () => {\n  const res = await axios.get(`${API_URL}/admin/stats`, { withCredentials: true });\n  return res.data;\n};\n\n// Holt alle Gruppen\nexport const fetchGroups = async () => {\n  const res = await axios.get(`${API_URL}/groups`, { withCredentials: true });\n  return res.data;\n};\n\n// F체gt eine neue Gruppe hinzu\nexport const addGroup = async (data: any) => {\n  const res = await axios.post(`${API_URL}/groups`, data, { withCredentials: true });\n  return res.data;\n};\n\n// Weist Erzieher einer Gruppe zu (Platzhalter, Backend-Route ggf. anpassen)\nexport const assignEducators = async (groupId: string, educatorIds: string[]) => {\n  const res = await axios.put(`${API_URL}/groups/${groupId}/educators`, { educatorIds }, { withCredentials: true });\n  return res.data;\n};\n\n// Holt alle Kinder\nexport const fetchChildren = async () => {\n  const res = await axios.get(`${API_URL}/children`, { withCredentials: true });\n  return res.data;\n};\n\n// F체gt ein neues Kind hinzu\nexport const addChild = async (data: any) => {\n  const res = await axios.post(`${API_URL}/children`, data, { withCredentials: true });\n  return res.data;\n};\n\n// Bearbeitet ein Kind (Platzhalter, Backend-Route ggf. anpassen)\nexport const editChild = async (childId: string, data: any) => {\n  const res = await axios.put(`${API_URL}/children/${childId}`, data, { withCredentials: true });\n  return res.data;\n};\n\n// Bereits vorhandene Funktionen\nexport const getKinder = fetchChildren;\nexport const getGruppen = fetchGroups;\nexport const createKind = addChild;\nexport const createGruppe = addGroup;\n\n// L채dt ein Kinderfoto hoch\nexport const uploadChildPhoto = async (childId: string, file: File) => {\n  const formData = new FormData();\n  formData.append('photo', file);\n  const res = await axios.put(`${API_URL}/children/${childId}/photo`, formData, {\n    withCredentials: true,\n    headers: { 'Content-Type': 'multipart/form-data' }\n  });\n  return res.data;\n};\n\n// Holt alle Erzieher\nexport const fetchEducators = async () => {\n  const res = await axios.get(`${API_URL}/educators`, { withCredentials: true });\n  return res.data;\n};\n\n// Holt Check-in-Statistiken (Platzhalter, Backend-Route ggf. anpassen)\nexport const fetchCheckinStats = async () => {\n  const res = await axios.get(`${API_URL}/checkin/stats`, { withCredentials: true });\n  return res.data;\n};\n\n// --- GROUPS ---\n// Edit a group\nexport const editGroup = async (groupId: string, data: any) => {\n  const res = await axios.put(`${API_URL}/groups/${groupId}`, data, { withCredentials: true });\n  return res.data;\n};\n// Delete a group\nexport const deleteGroup = async (groupId: string) => {\n  const res = await axios.delete(`${API_URL}/groups/${groupId}`, { withCredentials: true });\n  return res.data;\n};\n// Export groups (CSV/PDF)\nexport const exportGroups = (format: 'csv' | 'pdf') => {\n  window.open(`${API_URL}/groups/export?format=${format}`, '_blank');\n};\n\n// --- CHILDREN ---\n// Edit a child (already present as editChild)\n// Delete a child\nexport const deleteChild = async (childId: string) => {\n  const res = await axios.delete(`${API_URL}/children/${childId}`, { withCredentials: true });\n  return res.data;\n};\n// Export children (CSV/PDF)\nexport const exportChildren = (format: 'csv' | 'pdf') => {\n  window.open(`${API_URL}/children/export?format=${format}`, '_blank');\n};\n\n// --- EDUCATORS (STAFF) ---\n// Add educator\nexport const addEducator = async (data: any) => {\n  const res = await axios.post(`${API_URL}/educators`, data, { withCredentials: true });\n  return res.data;\n};\n// Edit educator\nexport const editEducator = async (educatorId: string, data: any) => {\n  const res = await axios.put(`${API_URL}/educators/${educatorId}`, data, { withCredentials: true });\n  return res.data;\n};\n// Delete educator\nexport const deleteEducator = async (educatorId: string) => {\n  const res = await axios.delete(`${API_URL}/educators/${educatorId}`, { withCredentials: true });\n  return res.data;\n};\n// Export educators (CSV/PDF)\nexport const exportEducators = (format: 'csv' | 'pdf') => {\n  window.open(`${API_URL}/educators/export?format=${format}`, '_blank');\n};\n\n// Weitere Admin-APIs k철nnen hier erg채nzt werden ","export async function fetchDailyReport(date: string, groupId?: string) {\r\n  const params = new URLSearchParams({ date });\r\n  if (groupId) params.append('groupId', groupId);\r\n  const res = await fetch(`/api/reports/daily?${params.toString()}`);\r\n  if (!res.ok) throw new Error('Fehler beim Laden des Tagesberichts');\r\n  return res.json();\r\n}\r\n\r\nexport function exportDailyReport(date: string, groupId?: string) {\r\n  const params = new URLSearchParams({ date, format: 'csv' });\r\n  if (groupId) params.append('groupId', groupId);\r\n  window.open(`/api/reports/daily/export?${params.toString()}`);\r\n}\r\n\r\nexport async function fetchMonthlyReport(month: string, groupId?: string) {\r\n  const params = new URLSearchParams({ month });\r\n  if (groupId) params.append('groupId', groupId);\r\n  const res = await fetch(`/api/reports/monthly?${params.toString()}`);\r\n  if (!res.ok) throw new Error('Fehler beim Laden des Monatsberichts');\r\n  return res.json();\r\n}\r\n\r\nexport function exportMonthlyReport(month: string, groupId?: string) {\r\n  const params = new URLSearchParams({ month, format: 'csv' });\r\n  if (groupId) params.append('groupId', groupId);\r\n  window.open(`/api/reports/monthly/export?${params.toString()}`);\r\n}\r\n\r\nexport async function fetchLatePickupsReport(date: string, groupId?: string) {\r\n  const params = new URLSearchParams({ date });\r\n  if (groupId) params.append('groupId', groupId);\r\n  const res = await fetch(`/api/reports/late-pickups?${params.toString()}`);\r\n  if (!res.ok) throw new Error('Fehler beim Laden des Versp채tungsberichts');\r\n  return res.json();\r\n}\r\n\r\nexport function exportLatePickupsReport(date: string, groupId?: string) {\r\n  const params = new URLSearchParams({ date });\r\n  if (groupId) params.append('groupId', groupId);\r\n  window.open(`/api/reports/late-pickups/export?${params.toString()}`);\r\n} "],"names":["ChartWrapper","styled","div","_templateObject","_taggedTemplateLiteral","Bar","_templateObject2","props","height","BarLabel","_templateObject3","ExportRow","_templateObject4","EmptyState","_templateObject5","Statistiken","stats","setStats","useState","loading","setLoading","error","setError","month","setMonth","Date","toISOString","slice","report","setReport","reportLoading","setReportLoading","reportError","setReportError","useEffect","fetchCheckinStats","then","catch","finally","fetchMonthlyReport","data","_jsxs","_Fragment","children","_jsx","Header","title","style","marginTop","Headline","Button","onClick","exportMonthlyReport","length","MascotBear","size","mood","map","day","idx","count","label","type","value","onChange","e","target","color","width","row","name","checkInDays","childId","API_URL","getAdminStats","async","axios","get","concat","withCredentials","fetchGroups","addGroup","post","assignEducators","groupId","educatorIds","put","fetchChildren","addChild","editChild","uploadChildPhoto","file","formData","FormData","append","headers","fetchEducators","deleteChild","delete","exportChildren","format","window","open","addEducator","editEducator","educatorId","deleteEducator","exportEducators","fetchDailyReport","date","params","URLSearchParams","res","fetch","toString","ok","Error","json","exportDailyReport"],"sourceRoot":""}