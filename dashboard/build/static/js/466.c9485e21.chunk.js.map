{"version":3,"file":"static/js/466.c9485e21.chunk.js","mappings":"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","sources":["services/educatorApi.ts","pages/educator/Kinder.tsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = '/api';\n\n// Holt alle Gruppen für Erzieher\nexport const getGruppen = async () => {\n  const res = await axios.get(`${API_URL}/groups`, { withCredentials: true });\n  return res.data;\n};\n\n// Holt alle Kinder einer Gruppe\nexport const getKinderByGruppe = async (groupId: string) => {\n  const res = await axios.get(`${API_URL}/groups/${groupId}/children`, { withCredentials: true });\n  return res.data;\n};\n\n// Check-in/out für ein Kind\nexport const checkinKind = async (childId: string, type: 'IN' | 'OUT', method: 'QR' | 'MANUAL') => {\n  const res = await axios.post(`${API_URL}/checkin`, { childId, type, method }, { withCredentials: true });\n  return res.data;\n};\n\n// Holt die heutigen Kinder der Erziehergruppe\nexport const fetchTodaysChildren = async (groupId: string) => {\n  const res = await axios.get(`${API_URL}/groups/${groupId}/children?date=heute`, { withCredentials: true });\n  return res.data;\n};\n\n// Holt ausstehende Check-ins\nexport const fetchPendingCheckins = async (groupId: string) => {\n  const res = await axios.get(`${API_URL}/groups/${groupId}/pending-checkins`, { withCredentials: true });\n  return res.data;\n};\n\n// Holt zugewiesene Kinder\nexport const fetchAssignedChildren = async (educatorId: string) => {\n  const res = await axios.get(`${API_URL}/educators/${educatorId}/children`, { withCredentials: true });\n  return res.data;\n};\n\n// Holt die eigene Gruppe\nexport const fetchMyGroup = async (educatorId: string) => {\n  const res = await axios.get(`${API_URL}/educators/${educatorId}/group`, { withCredentials: true });\n  return res.data;\n};\n\n// Holt Nachrichten\nexport const fetchMessages = async (childId?: string, groupId?: string) => {\n  let url = `${API_URL}/messages`;\n  if (childId) url += `/child/${childId}`;\n  else if (groupId) url += `/group/${groupId}`;\n  const res = await axios.get(url, { withCredentials: true });\n  return res.data;\n};\n\n// Sendet eine Nachricht\nexport const sendMessage = async (data: { content?: string; childId?: string; groupId?: string; file?: File }) => {\n  const formData = new FormData();\n  if (data.content) formData.append('content', data.content);\n  if (data.childId) formData.append('childId', data.childId);\n  if (data.groupId) formData.append('groupId', data.groupId);\n  if (data.file) formData.append('file', data.file);\n  const res = await axios.post(`${API_URL}/message`, formData, {\n    headers: { 'Content-Type': 'multipart/form-data', withCredentials: true },\n  });\n  return res.data;\n};\n\n/**\n * Notizen eines Kindes abrufen\n * @param {string} childId\n * @returns {Promise<any[]>}\n */\nexport async function fetchChildrenNotes(childId: string): Promise<any[]> {\n  const res = await fetch(`${API_URL}/notes/child/${childId}`, {\n    credentials: 'include',\n  });\n  if (!res.ok) throw new Error('Fehler beim Laden der Notizen');\n  return res.json();\n}\n\n/**\n * Neue Notiz für ein Kind anlegen\n * @param {string} childId\n * @param {string} content\n * @param {File | null} [file]\n * @returns {Promise<any>}\n */\nexport async function addNote(childId: string, content: string, file?: File | null): Promise<any> {\n  const formData = new FormData();\n  formData.append('childId', childId);\n  formData.append('content', content);\n  if (file) formData.append('file', file);\n  const res = await fetch(`${API_URL}/notes`, {\n    method: 'POST',\n    credentials: 'include',\n    body: formData,\n  });\n  if (!res.ok) throw new Error('Fehler beim Speichern der Notiz');\n  return res.json();\n}\n\n// Weitere Erzieher-APIs können hier ergänzt werden ","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useUser } from '../../components/UserContext';\nimport { fetchAssignedChildren } from '../../services/educatorApi';\nimport { Card, AnimatedMascotsLoader, ErrorMsg, Headline, Avatar } from '../../components/ui/AdminDashboardUI';\n\nconst Kinder: React.FC = () => {\n  const { benutzer } = useUser();\n  const [children, setChildren] = useState<any[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (benutzer?.role !== 'EDUCATOR') return;\n    setLoading(true);\n    fetchAssignedChildren(benutzer.id)\n      .then(setChildren)\n      .catch(() => setError('Fehler beim Laden der Kinder.'))\n      .finally(() => setLoading(false));\n  }, [benutzer]);\n\n  if (benutzer?.role !== 'EDUCATOR') return <ErrorMsg>Zugriff verweigert</ErrorMsg>;\n  if (loading) return <AnimatedMascotsLoader text=\"Lade Kinder...\" />;\n  if (error) return <ErrorMsg>{error}</ErrorMsg>;\n\n  return (\n    <div>\n      <Headline>Zugewiesene Kinder</Headline>\n      <ul>\n        {children.map(child => (\n          <Card key={child.id}>\n            <Avatar src={child.photoUrl} alt={child.name} />\n            <h3>{child.name}</h3>\n            <p>Geburtsdatum: {child.birthdate}</p>\n          </Card>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Kinder; "],"names":["API_URL","fetchTodaysChildren","async","axios","get","concat","groupId","withCredentials","data","fetchPendingCheckins","fetchAssignedChildren","educatorId","fetchMyGroup","fetchMessages","childId","url","sendMessage","formData","FormData","content","append","file","post","headers","fetchChildrenNotes","res","fetch","credentials","ok","Error","json","addNote","method","body","Kinder","benutzer","useUser","children","setChildren","useState","loading","setLoading","error","setError","useEffect","role","id","then","catch","finally","_jsx","ErrorMsg","AnimatedMascotsLoader","text","_jsxs","Headline","map","child","Card","Avatar","src","photoUrl","alt","name","birthdate"],"sourceRoot":""}