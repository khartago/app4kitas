{"version":3,"file":"static/js/299.109ec627.chunk.js","mappings":"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","sources":["pages/admin/Personal.tsx","services/adminApi.ts"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport ModernModal from '../../components/ui/ModernModal';\nimport MascotBear from '../../components/ui/MascotBear';\nimport { FormField, Label, Input, ErrorText, ModalButton } from '../../components/ui/ModernModal';\nimport { fetchEducators, addEducator, editEducator, deleteEducator, exportEducators } from '../../services/adminApi';\nimport { Button, Headline, Avatar } from '../../components/ui/AdminDashboardUI';\n\nconst Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  background: ${({ theme }) => theme.colors.surface};\n`;\nconst Th = styled.th`\n  padding: 12px;\n  background: ${({ theme }) => theme.colors.primary};\n  color: #fff;\n  text-align: left;\n  font-family: ${({ theme }) => theme.typography.fontFamily};\n  font-size: ${({ theme }) => theme.typography.body1.fontSize};\n  font-weight: ${({ theme }) => theme.typography.body1.fontWeight};\n`;\nconst Td = styled.td`\n  padding: 12px;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.border};\n  font-family: ${({ theme }) => theme.typography.fontFamily};\n  font-size: ${({ theme }) => theme.typography.body2.fontSize};\n  color: ${({ theme }) => theme.colors.textPrimary};\n`;\nconst Tr = styled.tr``;\nconst Actions = styled.td`\n  display: flex;\n  gap: 8px;\n`;\nconst Pagination = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: 8px;\n  margin-top: 16px;\n`;\nconst SearchInput = styled.input`\n  padding: ${({ theme }) => theme.components.input.padding};\n  border-radius: ${({ theme }) => theme.components.input.borderRadius};\n  border: 1px solid ${({ theme }) => theme.colors.border};\n  margin-bottom: 16px;\n  width: 250px;\n  font-family: ${({ theme }) => theme.typography.fontFamily};\n  font-size: ${({ theme }) => theme.typography.body2.fontSize};\n  color: ${({ theme }) => theme.colors.textPrimary};\n  background: ${({ theme }) => theme.colors.surface};\n  &:focus {\n    outline: none;\n    border-color: ${({ theme }) => theme.components.input.focusedBorderColor};\n  }\n`;\nconst AddButton = styled(Button)`\n  margin-bottom: 16px;\n`;\nconst PaginationButton = styled(Button)<{ active?: boolean }>`\n  background: ${({ theme, active }) => (active ? theme.colors.primary : theme.colors.surface)};\n  color: ${({ theme, active }) => (active ? '#fff' : theme.colors.textPrimary)};\n  border: 1px solid ${({ theme }) => theme.colors.border};\n  border-radius: 6px;\n  padding: 6px 14px;\n  font-family: ${({ theme }) => theme.typography.fontFamily};\n  font-size: ${({ theme }) => theme.typography.body2.fontSize};\n  font-weight: 500;\n  cursor: pointer;\n  transition: background 0.2s, color 0.2s;\n  &:hover {\n    background: ${({ theme }) => theme.colors.primaryDark};\n    color: #fff;\n  }\n`;\nconst ExportRow = styled.div`\n  display: flex;\n  gap: 12px;\n  margin-bottom: 16px;\n`;\nconst EmptyState = styled.div`\n  text-align: center;\n  margin: 48px 0;\n`;\n\ninterface Educator {\n  id: string;\n  name: string;\n  email: string;\n  avatarUrl?: string;\n}\n\nconst PAGE_SIZE = 10;\n\nconst Personal: React.FC = () => {\n  const [educators, setEducators] = useState<Educator[]>([]);\n  const [search, setSearch] = useState('');\n  const [page, setPage] = useState(1);\n  const [total, setTotal] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [showAdd, setShowAdd] = useState(false);\n  const [showEdit, setShowEdit] = useState<string | null>(null);\n  const [showDelete, setShowDelete] = useState<string | null>(null);\n  const [addForm, setAddForm] = useState({ name: '', email: '', password: '' });\n  const [editForm, setEditForm] = useState({ name: '', email: '', password: '' });\n  const [addError, setAddError] = useState('');\n  const [editError, setEditError] = useState('');\n\n  // Fetch educators\n  useEffect(() => {\n    const fetchAllEducators = async () => {\n      setLoading(true);\n      try {\n        const params = new URLSearchParams({ search, page: String(page), size: String(PAGE_SIZE) });\n        const res = await fetchEducators();\n        setEducators(res.educators || res);\n        setTotal(res.total || res.length || 0);\n      } catch {\n        setEducators([]);\n        setTotal(0);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAllEducators();\n  }, [search, page]);\n\n  // Add new educator\n  const handleAdd = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setAddError('');\n    if (!addForm.name || !addForm.email || !addForm.password) {\n      setAddError('Name, E-Mail und Passwort sind erforderlich.');\n      return;\n    }\n    try {\n      await addEducator(addForm);\n      setShowAdd(false);\n      setAddForm({ name: '', email: '', password: '' });\n      setPage(1);\n      setSearch('');\n      // Refresh\n      const res = await fetchEducators();\n      setEducators(res.educators || res);\n      setTotal(res.total || res.length || 0);\n    } catch (err: any) {\n      setAddError(err?.message || 'Fehler beim Anlegen.');\n    }\n  };\n\n  // Edit educator\n  const handleEdit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setEditError('');\n    if (!editForm.name || !editForm.email) {\n      setEditError('Name und E-Mail sind erforderlich.');\n      return;\n    }\n    try {\n      if (showEdit) {\n        await editEducator(showEdit, editForm);\n        setShowEdit(null);\n        setEditForm({ name: '', email: '', password: '' });\n        // Refresh\n        const res = await fetchEducators();\n        setEducators(res.educators || res);\n        setTotal(res.total || res.length || 0);\n      }\n    } catch (err: any) {\n      setEditError(err?.message || 'Fehler beim Bearbeiten.');\n    }\n  };\n\n  // Delete educator\n  const handleDelete = async () => {\n    if (!showDelete) return;\n    setLoading(true);\n    try {\n      await deleteEducator(showDelete);\n      setShowDelete(null);\n      // Refresh\n      const res = await fetchEducators();\n      setEducators(res.educators || res);\n      setTotal(res.total || res.length || 0);\n    } catch {\n      // Optionally show error\n    }\n    setLoading(false);\n  };\n\n  const pageCount = Math.ceil(total / PAGE_SIZE);\n\n  return (\n    <div>\n      <Headline>Personalübersicht</Headline>\n      <ExportRow>\n        <Button onClick={() => exportEducators('csv')}>Als CSV exportieren</Button>\n        <Button onClick={() => exportEducators('pdf')}>Als PDF exportieren</Button>\n        <AddButton onClick={() => setShowAdd(true)}>+ Personal hinzufügen</AddButton>\n      </ExportRow>\n      <SearchInput\n        placeholder=\"Suche nach Name oder E-Mail...\"\n        value={search}\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => { setSearch(e.target.value); setPage(1); }}\n      />\n      <Table>\n        <thead>\n          <Tr>\n            <Th>Name</Th>\n            <Th>E-Mail</Th>\n            <Th>Avatar</Th>\n            <Th>Aktionen</Th>\n          </Tr>\n        </thead>\n        <tbody>\n          {loading ? (\n            <Tr><Td colSpan={4}>Lädt...</Td></Tr>\n          ) : educators.length === 0 ? (\n            <Tr>\n              <Td colSpan={4}>\n                <EmptyState>\n                  <MascotBear size={80} mood=\"help\" />\n                  <div>Kein Personal gefunden.</div>\n                </EmptyState>\n              </Td>\n            </Tr>\n          ) : (\n            educators.map(educator => (\n              <Tr key={educator.id}>\n                <Td>{educator.name}</Td>\n                <Td>{educator.email}</Td>\n                <Td>{educator.avatarUrl ? <Avatar src={educator.avatarUrl} alt={educator.name} /> : '—'}</Td>\n                <Actions>\n                  <Button onClick={() => {\n                    setShowEdit(educator.id);\n                    setEditForm({ name: educator.name, email: educator.email, password: '' });\n                  }}>Bearbeiten</Button>\n                  <Button onClick={() => setShowDelete(educator.id)} style={{ background: '#e53935' }}>Löschen</Button>\n                </Actions>\n              </Tr>\n            ))\n          )}\n        </tbody>\n      </Table>\n      <Pagination>\n        {Array.from({ length: pageCount }, (_, i) => (\n          <PaginationButton\n            key={i}\n            active={i + 1 === page}\n            onClick={() => setPage(i + 1)}\n          >\n            {i + 1}\n          </PaginationButton>\n        ))}\n      </Pagination>\n      {/* Add Modal */}\n      {showAdd && (\n        <ModernModal open={showAdd} onClose={() => setShowAdd(false)} title=\"Personal anlegen\">\n          {addError && <ErrorText>{addError}</ErrorText>}\n          <form onSubmit={handleAdd}>\n            <FormField>\n              <Label>Name</Label>\n              <Input\n                type=\"text\"\n                value={addForm.name}\n                onChange={e => setAddForm(f => ({ ...f, name: e.target.value }))}\n                required\n              />\n            </FormField>\n            <FormField>\n              <Label>E-Mail</Label>\n              <Input\n                type=\"email\"\n                value={addForm.email}\n                onChange={e => setAddForm(f => ({ ...f, email: e.target.value }))}\n                required\n              />\n            </FormField>\n            <FormField>\n              <Label>Passwort</Label>\n              <Input\n                type=\"password\"\n                value={addForm.password}\n                onChange={e => setAddForm(f => ({ ...f, password: e.target.value }))}\n                required\n              />\n            </FormField>\n            <ModalButton type=\"submit\">Anlegen</ModalButton>\n          </form>\n        </ModernModal>\n      )}\n      {/* Edit Modal */}\n      {showEdit && (\n        <ModernModal open={!!showEdit} onClose={() => setShowEdit(null)} title=\"Personal bearbeiten\">\n          {editError && <ErrorText>{editError}</ErrorText>}\n          <form onSubmit={handleEdit}>\n            <FormField>\n              <Label>Name</Label>\n              <Input\n                type=\"text\"\n                value={editForm.name}\n                onChange={e => setEditForm(f => ({ ...f, name: e.target.value }))}\n                required\n              />\n            </FormField>\n            <FormField>\n              <Label>E-Mail</Label>\n              <Input\n                type=\"email\"\n                value={editForm.email}\n                onChange={e => setEditForm(f => ({ ...f, email: e.target.value }))}\n                required\n              />\n            </FormField>\n            <FormField>\n              <Label>Passwort (leer lassen zum Beibehalten)</Label>\n              <Input\n                type=\"password\"\n                value={editForm.password}\n                onChange={e => setEditForm(f => ({ ...f, password: e.target.value }))}\n              />\n            </FormField>\n            <ModalButton type=\"submit\">Speichern</ModalButton>\n          </form>\n        </ModernModal>\n      )}\n      {/* Delete Modal */}\n      {showDelete && (\n        <ModernModal open={!!showDelete} onClose={() => setShowDelete(null)} title=\"Personal löschen\">\n          <p>Möchtest du dieses Personal wirklich löschen?</p>\n          <ModalButton style={{ background: '#e53935' }} onClick={handleDelete}>Löschen</ModalButton>\n        </ModernModal>\n      )}\n    </div>\n  );\n};\n\nexport default Personal; ","import axios from 'axios';\n\nconst API_URL = '/api';\n\n// Holt Admin-Statistiken (Platzhalter, Backend-Route ggf. anpassen)\nexport const getAdminStats = async () => {\n  const res = await axios.get(`${API_URL}/admin/stats`, { withCredentials: true });\n  return res.data;\n};\n\n// Holt alle Gruppen\nexport const fetchGroups = async () => {\n  const res = await axios.get(`${API_URL}/groups`, { withCredentials: true });\n  return res.data;\n};\n\n// Fügt eine neue Gruppe hinzu\nexport const addGroup = async (data: any) => {\n  const res = await axios.post(`${API_URL}/groups`, data, { withCredentials: true });\n  return res.data;\n};\n\n// Weist Erzieher einer Gruppe zu (Platzhalter, Backend-Route ggf. anpassen)\nexport const assignEducators = async (groupId: string, educatorIds: string[]) => {\n  const res = await axios.put(`${API_URL}/groups/${groupId}/educators`, { educatorIds }, { withCredentials: true });\n  return res.data;\n};\n\n// Holt alle Kinder\nexport const fetchChildren = async () => {\n  const res = await axios.get(`${API_URL}/children`, { withCredentials: true });\n  return res.data;\n};\n\n// Fügt ein neues Kind hinzu\nexport const addChild = async (data: any) => {\n  const res = await axios.post(`${API_URL}/children`, data, { withCredentials: true });\n  return res.data;\n};\n\n// Bearbeitet ein Kind (Platzhalter, Backend-Route ggf. anpassen)\nexport const editChild = async (childId: string, data: any) => {\n  const res = await axios.put(`${API_URL}/children/${childId}`, data, { withCredentials: true });\n  return res.data;\n};\n\n// Bereits vorhandene Funktionen\nexport const getKinder = fetchChildren;\nexport const getGruppen = fetchGroups;\nexport const createKind = addChild;\nexport const createGruppe = addGroup;\n\n// Lädt ein Kinderfoto hoch\nexport const uploadChildPhoto = async (childId: string, file: File) => {\n  const formData = new FormData();\n  formData.append('photo', file);\n  const res = await axios.put(`${API_URL}/children/${childId}/photo`, formData, {\n    withCredentials: true,\n    headers: { 'Content-Type': 'multipart/form-data' }\n  });\n  return res.data;\n};\n\n// Holt alle Erzieher\nexport const fetchEducators = async () => {\n  const res = await axios.get(`${API_URL}/educators`, { withCredentials: true });\n  return res.data;\n};\n\n// Holt Check-in-Statistiken (Platzhalter, Backend-Route ggf. anpassen)\nexport const fetchCheckinStats = async () => {\n  const res = await axios.get(`${API_URL}/checkin/stats`, { withCredentials: true });\n  return res.data;\n};\n\n// --- GROUPS ---\n// Edit a group\nexport const editGroup = async (groupId: string, data: any) => {\n  const res = await axios.put(`${API_URL}/groups/${groupId}`, data, { withCredentials: true });\n  return res.data;\n};\n// Delete a group\nexport const deleteGroup = async (groupId: string) => {\n  const res = await axios.delete(`${API_URL}/groups/${groupId}`, { withCredentials: true });\n  return res.data;\n};\n// Export groups (CSV/PDF)\nexport const exportGroups = (format: 'csv' | 'pdf') => {\n  window.open(`${API_URL}/groups/export?format=${format}`, '_blank');\n};\n\n// --- CHILDREN ---\n// Edit a child (already present as editChild)\n// Delete a child\nexport const deleteChild = async (childId: string) => {\n  const res = await axios.delete(`${API_URL}/children/${childId}`, { withCredentials: true });\n  return res.data;\n};\n// Export children (CSV/PDF)\nexport const exportChildren = (format: 'csv' | 'pdf') => {\n  window.open(`${API_URL}/children/export?format=${format}`, '_blank');\n};\n\n// --- EDUCATORS (STAFF) ---\n// Add educator\nexport const addEducator = async (data: any) => {\n  const res = await axios.post(`${API_URL}/educators`, data, { withCredentials: true });\n  return res.data;\n};\n// Edit educator\nexport const editEducator = async (educatorId: string, data: any) => {\n  const res = await axios.put(`${API_URL}/educators/${educatorId}`, data, { withCredentials: true });\n  return res.data;\n};\n// Delete educator\nexport const deleteEducator = async (educatorId: string) => {\n  const res = await axios.delete(`${API_URL}/educators/${educatorId}`, { withCredentials: true });\n  return res.data;\n};\n// Export educators (CSV/PDF)\nexport const exportEducators = (format: 'csv' | 'pdf') => {\n  window.open(`${API_URL}/educators/export?format=${format}`, '_blank');\n};\n\n// Weitere Admin-APIs können hier ergänzt werden "],"names":["Table","styled","table","_templateObject","_taggedTemplateLiteral","_ref","theme","colors","surface","Th","th","_templateObject2","_ref2","primary","_ref3","typography","fontFamily","_ref4","body1","fontSize","_ref5","fontWeight","Td","td","_templateObject3","_ref6","border","_ref7","_ref8","body2","_ref9","textPrimary","Tr","tr","_templateObject4","Actions","_templateObject5","Pagination","div","_templateObject6","SearchInput","input","_templateObject7","_ref0","components","padding","_ref1","borderRadius","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","focusedBorderColor","AddButton","Button","_templateObject8","PaginationButton","_templateObject9","_ref16","active","_ref17","_ref18","_ref19","_ref20","_ref21","primaryDark","ExportRow","_templateObject0","EmptyState","_templateObject1","Personal","educators","setEducators","useState","search","setSearch","page","setPage","total","setTotal","loading","setLoading","showAdd","setShowAdd","showEdit","setShowEdit","showDelete","setShowDelete","addForm","setAddForm","name","email","password","editForm","setEditForm","addError","setAddError","editError","setEditError","useEffect","async","URLSearchParams","String","size","res","fetchEducators","length","_unused","fetchAllEducators","pageCount","Math","ceil","_jsxs","children","_jsx","Headline","onClick","exportEducators","placeholder","value","onChange","e","target","colSpan","MascotBear","mood","map","educator","avatarUrl","Avatar","src","alt","id","style","background","Array","from","_","i","ModernModal","open","onClose","title","ErrorText","onSubmit","preventDefault","addEducator","err","message","FormField","Label","Input","type","f","_objectSpread","required","ModalButton","editEducator","deleteEducator","_unused2","API_URL","getAdminStats","axios","get","concat","withCredentials","data","fetchGroups","addGroup","post","assignEducators","groupId","educatorIds","put","fetchChildren","addChild","editChild","childId","uploadChildPhoto","file","formData","FormData","append","headers","fetchCheckinStats","deleteChild","delete","exportChildren","format","window","educatorId"],"sourceRoot":""}